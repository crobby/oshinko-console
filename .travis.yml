sudo: required
## use node_js
language: node_js
node_js:
  - "6"
addons:
  apt:
    packages:
      - net-tools
  chrome: stable
## home folder is /home/travis/build/radanalyticsio/oshinko-console
services:
  - docker
before_install:
  - wget https://www.slimjet.com/chrome/download-chrome.php?file=lnx%2Fchrome64_66.0.3359.181.deb -O chrome.deb
  - sudo dpkg -i ./chrome.deb
  - sudo apt-get update -qq
  - sudo sed -i "s/\DOCKER_OPTS=\"/DOCKER_OPTS=\"--insecure-registry=172.30.0.0\/16 /g" /etc/default/docker
  - sudo cat /etc/default/docker
  - sudo service docker restart
  - ./test/prepare.sh
  - oc create configmap storedconfig --from-literal=mastercount=1 --from-literal=workercount=4
install:
  - npm install grunt-cli -g
  - npm install
before_script:
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
script:
## Check to make sure the files in dist are in sync with the actual source code
  - grunt build
  - if [[ `sudo diff /home/travis/origin/master/scripts.js dist/scripts/scripts.js` ]]; then echo "Compiled scripts.js does not match dist"; exit 1; else echo "Compiled scripts.js matches source code"; fi
  - if [[ `sudo diff /home/travis/origin/master/templates.js dist/scripts/templates.js` ]]; then echo "Compiled templates.js does not match dist"; exit 1; else echo "Compiled templates.js matches source code"; fi
  - export IP="$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)"
  - echo ${IP}
## integration tests need headless setup
##  - curl -k -v https://${IP}/console/
  - export CHROME_VERSION=$(google-chrome --version)
  - echo "Chrome version is $CHROME_VERSION"
  - grunt test-integration --baseUrl=https://${IP}:8443/console/
notifications:
 email:
   on_success: never
   on_failure: never